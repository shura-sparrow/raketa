{
  "name": "svg4everybody",
  "description": "Use external SVG spritemaps in any browser",
  "version": "2.0.0",
  "author": {
    "name": "Jonathan Neal",
    "email": "jonathantneal@hotmail.com",
    "url": "http://jonathantneal.com"
  },
  "contributors": [
    {
      "name": "Luis Merino Rendez",
      "email": "mail@luismerino.name",
      "url": "http://luismerino.name"
    }
  ],
  "homepage": "https://github.com/jonathantneal/svg4everybody",
  "license": "CC0-1.0",
  "keywords": [
    "svgs",
    "sprites",
    "spritemaps",
    "symbols",
    "defs",
    "uses",
    "oldies",
    "ie8s",
    "ie9s",
    "safaris",
    "externals",
    "icons",
    "fallbacks"
  ],
  "bugs": {
    "url": "https://github.com/jonathantneal/svg4everybody/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/jonathantneal/svg4everybody.git"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "dependencies": {},
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.11.2",
    "grunt-contrib-uglify": "^0.9.1",
    "grunt-contrib-watch": "^0.6.1",
    "grunt-umd": "^2.3.3",
    "load-grunt-tasks": "^3.2.0"
  },
  "main": "dist/svg4everybody.legacy.min.js",
  "scripts": {
    "build": "grunt build",
    "clean": "git checkout dist/svg4everybody.js && git checkout dist/svg4everybody.min.js && git checkout dist/svg4everybody.legacy.js && git checkout dist/svg4everybody.legacy.min.js",
    "test": "grunt test",
    "watch": "grunt build:watch"
  },
  "gitHead": "243335bf6ad23e2a757ff2c49647523332682a3a",
  "readme": "# SVG for Everybody\n\n[SVG for Everybody] adds [SVG External Content] support to [all browsers].\n\nTo use it now, include the script in your document.\n\n```html\n<script src=\"/path/to/svg4everybody.js\"></script>\n<script>svg4everybody(); // run it now or whenever you are ready</script>\n```\n\nTo support Internet Explorer 6-8, include the legacy script instead.\n\n```html\n<script src=\"/path/to/svg4everybody.legacy.js\"></script>\n<script>svg4everybody(); // run it now or whenever you are ready</script>\n```\n\n_As of v2.0.0, you must the manually call `svg4everybody()`. If you are using an AMD/CommonJS dependency loader then you may call it within the callback closure._\n\nIE 6-8 require you to put the script in the `<head>` in order to shiv `<svg>` and `<use>` elements. For best results in IE, set [X-UA-Compatible] to `ie=edge`. This can be done with a response header from the server or the following HTML in the `<head>`.\n\n```html\n<meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n```\n\n## Usage\n\nCreate an SVG image.\n\n**map.svg:**\n```html\n<svg xmlns=\"http://www.w3.org/2000/svg\">\n\t<symbol id=\"codepen\" viewBox=\"0 0 64 64\">\n\t\t<title>CodePen</title>\n\t\t<path etc.../>\n\t</symbol>\n\t<symbol id=\"youtube\" viewBox=\"0 0 64 64\">\n\t\t<title>YouTube</title>\n\t\t<path etc.../>\n\t</symbol>\n\t<symbol id=\"twitter\" viewBox=\"0 0 64 64\">\n\t\t<title>Twitter</title>\n\t\t<path etc.../>\n\t</symbol>\n</svg>\n```\n\nThis spritemap displays fine in **Chrome**, **Safari 7.1+**, **Firefox**, and **Opera**. [SVG for Everybody] polyfills the experience in **Safari 6**, **IE 6+**, and **Edge 12**.\n\n```html\n<svg role=\"img\" title=\"CodePen\">\n\t<use xlink:href=\"map.svg#codepen\"/>\n</svg>\n<svg role=\"img\" title=\"YouTube\">\n\t<use xlink:href=\"map.svg#youtube\"/>\n</svg>\n<svg role=\"img\" title=\"Twitter\">\n\t<use xlink:href=\"map.svg#twitter\"/>\n</svg>\n```\n\n*IE 6-8 requires a trailing slash `/` when using a self-closing `<use/>` element.*\n\n![3 SVG logos](http://i.imgur.com/87Npdzn.png)\n\nBrowsers not supporting SVG fallback to images.\n\n```html\n<svg role=\"img\" title=\"CodePen\">\n\t<img src=\"map.svg.codepen.png\">\n</svg>\n<svg role=\"img\" title=\"YouTube\">\n\t<img src=\"map.svg.youtube.png\">\n</svg>\n<svg role=\"img\" title=\"Twitter\">\n\t<img src=\"map.svg.twitter.png\">\n</svg>\n```\n\nBy default, fallback images point to a PNG file in the same location as the SVG, only with the `#` hash replaced by a `.` dot and then appended with a `.png` extension. If you want to change this behavior, you can define your own fallback.\n\n```js\nsvg4everybody({\n\tfallback: function (src, svg, use) {\n\t\t// src: current xlink:href String \n\t\t// svg: current SVG Element \n\t\t// use: current USE Element \n\n\t\treturn 'fallback.png'; // ok, always return fallback.png\n\t}\n});\n```\n\nAll `<use>` elements that are children of an `<svg>` are checked for external content. If you want to change this behavior, you can define your own validator.\n\n```js\nsvg4everybody({\n\tvalidator: function (src, svg, use) {\n\t\t// src: current xlink:href String \n\t\t// svg: current SVG Element \n\t\t// use: current USE Element \n\n\t\treturn true; // ok, everything is valid\n\t}\n});\n```\n\nYou can override whether the script polyfills External Content at all (`polyfill`), or whether SVG should even be used over fallback images (`nosvg`).\n\n```js\nsvg4everybody({\n\tnosvg: true, // shiv <svg> and <use> elements and use image fallbacks\n\tpolyfill: true // polyfill <use> elements for External Content\n});\n```\n\n*Use of the `nosvg` option will requires you to use the legacy version of SVG for Everybody.*\n\n## Implementation status\n\nModern browsers support external content in SVGs, *except Edge*. No frets; we can shim it.\n\n| OS  | Browser           | SVG | External Content | Shimmed |\n|:---:|-------------------|:---:|:----------------:|:-------:|\n| *   | Chrome 21+        | ✔   | ✔                | —       |\n| *   | Chrome 14-20      | ✔   | ✖                | ✔       |\n| *   | Firefox 4+        | ✔   | ✔                | —       |\n| *   | Opera 23+         | ✔   | ✔                | —       |\n| *   | Opera Mini 8+     | ✔   | ✔                | —       |\n| And | And. Browser 40+  | ✔   | ✔                | —       |\n| And | And. Browser 4.1+ | ✔   | ✖                | ✔       |\n| iOS | iOS 8.1+          | ✔   | ✔                | —       |\n| iOS | iOS 6-7           | ✔   | ✖                | ✔       |\n| OSX | Saf 7.1+          | ✔   | ✔                | —       |\n| OSX | Saf 6             | ✔   | ✖                | ✔       |\n| Win | Edge 12           | ✔   | ✖                | ✔       |\n| Win | IE 9 - 11         | ✔   | ✖                | ✔       |\n| Win | IE 6 - 8          | ✖   | ✖                | ✔       |\n\nAs you can see, at this point we’re really only waiting on Edge. Edge’s project manager, [David Storey] assures us that native support for external content in SVGs is high on their checklist. You may [track progress] or, better yet, [vote for attention] to this issue. I think it will land soon, but don’t quote me on anything.\n\n> I have complete faith in the Microsoft Edge team and absolutely expect support to arrive within the next few months.\n>\n> — Jon Neal (August, 2015)\n\n## Readability and accessibility\n\nSVGs are compelling to use for many reasons, and one of them is their ease of accessibility.\n\nWithin your spritemap, have each sprite use a `<title>` element to identify itself.\n\n```html\n<symbol id=\"codepen\">\n\t<title>CodePen</title>\n\t<path etc.../>\n</symbol>\n```\n\nWhen this sprite is used, its title will be read aloud in [JAWS](http://www.freedomscientific.com/products/fs/JAWS-product-page.asp) and [NVDA](http://www.nvaccess.org/). Then, within your document, each sprite may use a `title` attribute to identify itself.\n\n```html\n<svg title=\"CodePen\">\n\t<use xlink:href=\"map.svg#codepen\"/>\n</svg>\n```\n\nThat title will be read aloud in [VoiceOver](http://www.apple.com/accessibility/osx/voiceover/) and [NVDA](http://www.nvaccess.org/). At present, the `title` attribute is the only way to properly read aloud an SVG in VoiceOver. I’ll let you know if this changes.\n\nAll together, **use the `title` attribute in your document and the `title` element in your SVG**.\n\nARIA roles may also be used to provide even more information to assistive technology.\n\nWhen a sprite is merely decoration, use `role=\"presentation\"`.\n\n```html\n<a href=\"//twitter.com/jon_neal\"><svg role=\"presentation\">\n\t<use xlink:href=\"map.svg#twitter\"/>\n</svg> Find me on Twitter</a>\n```\n\nOtherwise, use `role=\"img\"` and remember to add a description.\n\n```html\n<a href=\"//twitter.com/jon_neal\"><svg title=\"Find me on Twitter\" role=\"img\">\n\t<use xlink:href=\"map.svg#twitter\"/>\n</svg></a>\n```\n\n### Futher reading\n\n- [Tips for creating accessible SVG](https://www.sitepoint.com/tips-accessible-svg/)\n- [Using ARIA to enhance SVG accessibility](http://blog.paciellogroup.com/2013/12/using-aria-enhance-svg-accessibility/)\n- [SVG symbol a good choice for icons](http://css-tricks.com/svg-symbol-good-choice-icons/)\n- [Implementing inline SVG Icons](https://kartikprabhu.com/article/inline-svg-icons)\n\n## Optimized SVGs\n\nSVG files, especially exported from vector tools, often contain tons of unnecessary data such as editor metadata, comments, hidden elements, and other stuff that can be safely removed without affecting SVG rendering result.\n\nUse a tool like [SVGO] to optimize SVG spritemaps.\n\n```bash\n$ [sudo] npm install -g svgo\n$ svgo spritemap.svg\n```\n\n[all browsers]: http://caniuse.com/svg\n[David Storey]: https://twitter.com/dstorey/status/626514631884804096\n[SVG External Content]: http://css-tricks.com/svg-sprites-use-better-icon-fonts/##Browser+Support\n[SVG for Everybody]: https://github.com/jonathantneal/svg4everybody\n[SVGO]: https://github.com/svg/svgo\n[track progress]: http://dev.modern.ie/platform/status/svgexternalcontent/?filter=f3e0000bf&search=svg\n[vote for attention]: https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/6263916-svg-external-content\n[X-UA-Compatible]: http://www.modern.ie/en-us/performance/how-to-use-x-ua-compatible\n",
  "readmeFilename": "README.md",
  "_id": "svg4everybody@2.0.0",
  "_shasum": "7c94d50fce83ee2493e6901b7dbd3d9891666946",
  "_from": "jonathantneal/svg4everybody",
  "_resolved": "git://github.com/jonathantneal/svg4everybody.git#243335bf6ad23e2a757ff2c49647523332682a3a"
}
